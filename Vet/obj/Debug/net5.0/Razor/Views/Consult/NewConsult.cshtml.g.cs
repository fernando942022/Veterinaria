#pragma checksum "C:\Users\FFernandez\source\repos\Vet\Vet\Views\Consult\NewConsult.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ebdc55ebb47b496f6c2b99521a19006ba5c85ad6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Consult_NewConsult), @"mvc.1.0.view", @"/Views/Consult/NewConsult.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\FFernandez\source\repos\Vet\Vet\Views\_ViewImports.cshtml"
using Vet;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\FFernandez\source\repos\Vet\Vet\Views\_ViewImports.cshtml"
using Vet.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ebdc55ebb47b496f6c2b99521a19006ba5c85ad6", @"/Views/Consult/NewConsult.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d857119458fb2584755616faf8d842a76bb13a32", @"/Views/_ViewImports.cshtml")]
    public class Views_Consult_NewConsult : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Vet.Models.Consult>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<h3>New Consult</h3>
<br />
<br />

<div class=""container form-inline"" style=""height: auto"" id=""consult"">
    <br /><br />
    <div class=""row col-6 in"">

        <div class=""col-7"" id=""summer"">

        </div><br />
    </div>

    <div class=""row col-6"">
        <div class=""form-group col-12"">
            <label>Consult Date </label><br />
            <input type=""datetime-local"" class=""form-control"" id=""ConsultDate""/>
        </div><br /><br />

        <br /><div class=""form-group col-5"">
            ");
#nullable restore
#line 22 "C:\Users\FFernandez\source\repos\Vet\Vet\Views\Consult\NewConsult.cshtml"
       Write(Html.LabelFor(model => model.OwnerName));

#line default
#line hidden
#nullable disable
            WriteLiteral("<br />\r\n            ");
#nullable restore
#line 23 "C:\Users\FFernandez\source\repos\Vet\Vet\Views\Consult\NewConsult.cshtml"
       Write(Html.TextBoxFor(model => model.OwnerName, new { @class = "form-control", @id = "ownername" }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n        </div><br /><br />\r\n\r\n        <div class=\"form-group col-5\">\r\n            ");
#nullable restore
#line 27 "C:\Users\FFernandez\source\repos\Vet\Vet\Views\Consult\NewConsult.cshtml"
       Write(Html.LabelFor(model => model.PetName));

#line default
#line hidden
#nullable disable
            WriteLiteral("<br />            \r\n            <select class=\"form-control col-12\" id=\"selectPets\">\r\n                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ebdc55ebb47b496f6c2b99521a19006ba5c85ad64611", async() => {
                WriteLiteral("Pets");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n            </select>\r\n        </div><br /><br /><br /><br />\r\n\r\n        <div class=\"form-group col-5\">\r\n            ");
#nullable restore
#line 34 "C:\Users\FFernandez\source\repos\Vet\Vet\Views\Consult\NewConsult.cshtml"
       Write(Html.LabelFor(model => model.PetWeight));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n            ");
#nullable restore
#line 35 "C:\Users\FFernandez\source\repos\Vet\Vet\Views\Consult\NewConsult.cshtml"
       Write(Html.TextBoxFor(model => model.PetWeight, new { @class = "form-control", @id = "petweight" }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n        </div><br /><br />\r\n\r\n        <div class=\"form-group col-5 float-right\">\r\n            ");
#nullable restore
#line 39 "C:\Users\FFernandez\source\repos\Vet\Vet\Views\Consult\NewConsult.cshtml"
       Write(Html.LabelFor(model => model.PetTemperature));

#line default
#line hidden
#nullable disable
            WriteLiteral("<br />\r\n            ");
#nullable restore
#line 40 "C:\Users\FFernandez\source\repos\Vet\Vet\Views\Consult\NewConsult.cshtml"
       Write(Html.TextBoxFor(model => model.PetTemperature, new { @class = "form-control", @id = "pettemperature" }));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
        </div><br /><br /><br />

    </div>

    <div class=""col-12"">
        <button class=""btn btn-primary form-control col-12"" id=""btnSave"">Save</button><br /><br />
    </div>

</div>
<br />

<div class=""container"" id=""history"">

</div>

");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        //Esta variable global almacenara el petId que utilizaremos en todo el codigo dentro de las funciones.
        var petId;
        var petName; //nombre de la mascota

        $(document).ready(function () {
            //este dato no se utiliza, solamente se envia como parametro de ajax
            var datatest = 1;
            $(""#summer"").summernote({
                placeholder: ""Medical chart"",
                height: 100,// set editor height
                minHeight: null, // set minimum height of editor
                maxHeight: null, // set maximum height of editor
                //focus: true // set focus to editable area after initializing summernote
            })

            //Con este ajax cargamos la lista de mascotas con su id, petname y ownername en el elemento <select></select>
            $.ajax({
                url: """);
#nullable restore
#line 76 "C:\Users\FFernandez\source\repos\Vet\Vet\Views\Consult\NewConsult.cshtml"
                 Write(Url.Action("OwnerPet", "Information"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                data: datatest,
                type: ""Post""
            }).done(function (result) {
                // si el resultado de la consulta tiene registro se genera la lista
                if (result != """") {

                    $.each(result, function (index, row) {
                        $(""#selectPets"").append(""<option value='"" + result[index][""petId""] + ""-"" + result[index][""name""] + ""-"" + result[index][""petName""] + ""'>"" + result[index][""petName""] + ""</option > "");
                    });
                    console.info(result);
                }
                else {
                    alert(""Error, there is not list Pets-Owner"");

                }

            });
        });

        //Este evento se ejecuta cuando el usuario seleciona una mascota
        //dentro del evento obtenemos el nombre del owner y el petId los cuales estan asociados al value de cada option de cada mascota
        $(""#selectPets"").change(function () {
            alert($(this).val());");
                WriteLiteral(@"

            var sOptionValues = $(this).val().split(""-"");
            petId = parseInt(sOptionValues[0]);
            petName = sOptionValues[2];
            //alert(petId);
            $(""#ownername"").val(sOptionValues[1]);

            //con este ajax buscamos si la mascota ya tiene un historial de consultas.
            $.ajax({
                url: """);
#nullable restore
#line 109 "C:\Users\FFernandez\source\repos\Vet\Vet\Views\Consult\NewConsult.cshtml"
                 Write(Url.Action("SearchConsult", "Consult"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                data: { petId },
                type: ""Post""
            }).done(function (result) {
                // si el resultado de la consulta tiene registro se genera la tabla
                if (result != """") {
                    CreateTable(result);

                }
                else {
                    //var history = $(""#history"");
                    alert(""There is not consults record for this pet"");
                    $(""#history"").html("""");
                }

            });


        });

        $(""#btnSave"").click(function () {
            alert(petId + "" <> "" + petName);

            $.ajax({
                url: """);
#nullable restore
#line 133 "C:\Users\FFernandez\source\repos\Vet\Vet\Views\Consult\NewConsult.cshtml"
                 Write(Url.Action("Add", "Consult"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                data: dataConsult(),
                type: ""Post""
                }).done(function (result) {
                    if (result != """") {
                        alert(result.length);
                        //si el div history esta vacio significa que la mascota no tiene historial de consulta
                        //genero la tabla sino solo agrego fila a la tabla
                        if ($(""#history"").children().length == 0) {
                            CreateTable(result);
                        }
                        else {
                            CreateRow(result);
                            //console.info($(""#tableHistory"").length);
                        }

                    }
                    else {
                        alert(""Not consult register for pet"");
                    }
                });

        });


        function CreateTable(result) {
            alert(result.length);
            var history = $(""#history"");
         ");
                WriteLiteral(@"   history.html("""");
            history.append(""<h5>Pet history</h5>"");
            history.append(""<table class='table col-12 table-striped' id='tableHistory'></table>"");
            table = $(""#tableHistory"");
            table.append(""<tr><th>Date</th><th>Name</th><th>Comments</th></tr>"");

            //if (result.length > 1) {
                $.each(result, function (index, col) {
                    //alert(result[index][""petName""]);
                    table.append(""<tr><td>"" + result[index][""consultDate""] + ""</td ><td>"" + result[index][""petName""] + ""</td ><td>"" + result[index][""medicalChart""] + ""</td >/tr>"");

                });
            //}
            //else {
              //  alert(result[""petName""]);
                //table.append(""<tr><td>"" + result[0][""consultDate""] + ""</td ><td>"" + result[0][""petName""] + ""</td ><td>"" + result[0][""medicalChart""] + ""</td >/tr>"");
            //}

        }

        function dataConsult() {
            data = {
                PetId: pe");
                WriteLiteral(@"tId,
                OwnerName: $(""#ownername"").val(),
                PetName: petName,
                ConsultDate: $(""#ConsultDate"").val(),
                PetWeight: parseInt($(""#petweight"").val()),
                PetTemperature: $(""#pettemperature"").val(),
                MedicalChart: $(""#summer"").summernote(""code"")
            }
            return data;
        }

        function CreateRow(result) {
            table = $(""#tableHistory"");
            table.append(""<tr>"");
            table.append(""<td>"" + result[0][""consultDate""] + ""</td > "");
            table.append(""<td>"" + result[0][""petName""] + ""</td > "");
            table.append(""<td>"" + result[0][""medicalChart""] + ""</td > "");
            table.append(""</tr>"");
            //table.append(""<tr><td>"" + result[index][""consultDate""] + ""</td ><td>"" + result[index][""petName""] + ""</td ><td>"" + result[index][""medicalChart""] + ""</td >/tr>"");
        }

    </script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Vet.Models.Consult> Html { get; private set; }
    }
}
#pragma warning restore 1591
